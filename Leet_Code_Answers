#Merge Alternating Words
import numpy

class Solution(object):
    def mergeAlternately(self, word1, word2):
        #CAN'T DO LEN() w/INTS! MUST CONVERT TO STRING (ex = x = 121 --> len(str(x)) gives 3 cuz 121 is 3 has three digits) 
        word1_size = len(word1)
        #DEBUG
        print(word1_size)
        word2_size = len(word2)
         #DEBUG
        print(word2_size)
        result = ""
        i = 0 
        while (i < word1_size or i < word2_size):
            #DEBUG
            print(i)
            if(i < word1_size):
                result+=word1[i]
            if(i < word2_size):
                result+=word2[i]
            i+=1
            
        return "".join(result)

        #word1="abc"
        #word2="xyz"
        
        #print(mergeAlternately(word1, word2))

       # Create loop to iterate index from 0 to max_word_size

       # Create if condition in loop to check index does not exceed work1 size or word2 size

#Array Two Sum 

class Solution(object):
    def twoSum(self, nums, target):
        #print nums  (had to comment these out because it takes too long to compile lists with thousands of elements, they were just here to debug) 
        #print target
        i = 0
        k = 0
        print(len(nums))
        # range (0, 5, 1) will print 0-->4 (the 1 increments by 1) 
        for i in range(0, len(nums), 1):
            x = nums[i]
            # DEBUG
            #print("i:", i)
            #print("x:", x)
            for k in range (i+1, len(nums), 1):
                y = nums[k]
                # DEBUG
                #print("k:", k)
                #print("y:", y)
                if (x+y) == target:
                    print(i,k)
                    output = [i,k]
                    return output
